# -*-mode:org;coding:utf-8-*-
# Created:  zhuji 02/12/2020
# Modified: zhuji 02/12/2020 20:06

#+OPTIONS: toc:nil num:nil
#+BIND: org-html-link-home "https://zhujing0227.github.io/images"
#+TITLE: mysql 函数

#+begin_export md
---
layout: post
title: mysql 函数
categories: database
tags: [mysql]
comments: true
---
#+end_export

- 解决 sleep 线程过多 [[http://www.cnblogs.com/wajika/p/6763181.html][参考]]
  #+begin_quote
  set global wait_timeout=100
  mysql 默认 timeout 时间为 28800
  #+end_quote

- 慢查询日志
  #+begin_example
  `SET GLOBAL SLOW_QUERY_LOG = 'ON';` //慢查询日志
  `SET GLOBAL LOG_QUERIES_NOT_USING_INDEXES = 'ON';`  //记录未使用索引的查询
  `SET profiling=1;`  //开启 profile 功能
  `SHOW profiles;`    //得到被执行的 SQL 语句的时间和 ID
  `SHOW GLOBAL VARIABLES LIKE '%slow%';`  //查看系统变量的值
  `SHOW PROCESSLIST;` //查看当前运行的进程
  #+end_example

- mysqldumpslow 慢查询分析
  #+begin_quote
  mysqldumpslow -s c -t 10 /database/mysql/slow-query.log
  这会输出记录次数最多的 10 条 SQL 语句，其中：
  -s, 是表示按照何种方式排序，c、t、l、r 分别是按照记录次数、时间、查询时间、返回的记录数来排序，ac、at、al、ar，表示相应的倒叙；
  -t, 是 top n 的意思，即为返回前面多少条的数据；
  -g, 后边可以写一个正则匹配模式，大小写不敏感的;
  #+end_quote

- mysql 替换字段部分内容
  1. replace into
     #+begin_example
     `replace into table (id,name) values('1','aa'),('2','bb')`
     此语句的作用是向表 table 中插入两条记录.如果主键 id 为 1 或 2 不存在就相当于
     `insert into table (id,name) values('1','aa'),('2','bb')`
     如果存在相同的值则不会插入数据
     #+end_example
  2. replace(object,search,replace)
     #+begin_example
     把 object 中出现 search 的全部替换为 replace,
     `select replace('www.163.com','w','Ww'); --->WwWwWw.163.com`
     例：把表 table 中的 name 字段中的 aa 替换为 bb,
     `update table set name=replace(name,'aa','bb')`
     #+end_example
  3. UPDATE 更新一个字段中的的部分内容
     #+begin_example
     现在有一条记录的字段是“abcdefg",现在我只想将该字段中的 c 改为 C, update 语句应该怎么写
     `update 表名 set 字段 1 = replace(字段 1,'c','C')`
     #+end_example

- IFNULL()替换空值
  #+begin_quote
  ifnull(o.ORG_NAME,'基层销售') 'orgName'
  #+end_quote

- 有层级关系的数据利用自连接
  #+BEGIN_SRC java
    SELECT o.ID, o.ORG_NAME, o.ORG_LEVEL, o.FATHER_ORGID, o.ORG_NUMBER, o.available, o.createrId, o.createTime, f.ORG_NAME 'fatherOrgName'
            FROM sys_orgs o
            LEFT JOIN sys_orgs f ON o.FATHER_ORGID = f.ID
            WHERE 1=1
            <if test="organization.orgName != null and organization.orgName != ''">
                AND o.ORG_NAME LIKE CONCAT('%',#{organization.orgName},'%')
            </if>
            <if test="organization.fatherOrgId != null">
                AND o.FATHER_ORGID = (#{organization.fatherOrgId})
            </if>
                AND o.available='1'
            ORDER BY ORG_LEVEL ASC
            LIMIT #{pageInfo.offset},#{pageInfo.limit}
  #+END_SRC

- 更改密码
  #+begin_example
  `mysqld_safe --skip-grant-tables&`
  `mysql -u root`
  `update mysql.user set authentication_string=password('root') where user='root' ;`
  #+end_example

- 返回数字的字符串函数
  #+begin_example
  `select length(char_fld) from string_tb1`,对 char 类型会去尾端的空格
  `select position('substring' IN vchar_fld) from string_tb1`,如果找不到改子串,返回 0
  `select locate('substring', vchar_fld, 5) from string_tb1`,与 position 函数类似,可以指定搜索的起始位置
  `SELECT strcmp('abc', 'bca')`,比较字符串的顺序,`-1,0,1 => 前,相同,后`,大小写不敏感
  #+end_example

- 修改会话的时区设置
  #+begin_example
  set time_zone = 'Europe/Zurich'
  #+end_example

- 为指定日期增加一段时间间隔
  #+begin_example
  `SELECT date_add('2017-12-12', INTERVAL -5 DAY);` => 2017-12-07
  `SELECT date_add('2017-12-12', INTERVAL 5 DAY);`  => 2017-12-17
  #+end_example

- 日期时间间隔类型
#+begin_example
----------------------------------------------------
时间间隔         |               描述                 |
-----------------------------------------------------
Second          |   秒数                             |
Minute          |   分钟数                           |
Hour            |   小时数                           |
Day             |   天数                             |
Month           |   月份                             |
Year            |   年份                             |
Minute_second   |   分钟数和秒数,中间用':'隔开          |
Hour_second     |   小时数/分钟数和秒数,中间用':'隔开    |
Year_month      |   年份和月份,中间用'-'隔开            |
----------------------------------------------------
#+end_example

- 提取日期值中的信息,时间间隔类型同上 date_add()函数一样
  #+begin_example
  SELECT extract(YEAR FROM '2017-12-12'); => 12
  #+end_example

- 获取更多汇总信息-with rollup
  #+BEGIN_SRC sql
    SELECT sum(avail_balance) total_balance, product_cd, open_branch_id, count(account_id)
    FROM account
    GROUP BY product_cd, open_branch_id WITH ROLLUP
    HAVING count(account_id) >= 1;
  #+END_SRC
  #+begin_example
  product_cd  open_branch_id  count(account_id)   total_balance
  BUS		2		1		9345.55
  BUS		4		1		0
  BUS		null	        2		9345.55
  CD		1		2		11500
  CD		2		2		8000
  CD		null	        4		19500
  CHK		1		3		782.16
  CHK		2		2		3315.77
  CHK		3		1		1057.75
  CHK		4		4		67852.33
  CHK		null	        10		73008.01
  MM		1		2		14832.64
  MM		3		1		2212.5
  MM		null	        3		17045.14
  SAV		1		1		767.77
  SAV		2		2		700
  SAV		4		1		387.99
  SAV		null	        4		1855.76
  SBL		3		1		50000
  SBL		null	        1		50000
  null	        null	        24		170754.46		
  #+end_example
